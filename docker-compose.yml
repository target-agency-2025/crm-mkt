version: '3.8'

services:
  crm-app:
    build: .
    container_name: crm-marketing
    ports:
      - "3001:3001"
    volumes:
      # Persistent data volumes
      - ./data:/app/data
      - ./uploads:/app/uploads
      # Bind mount for development (optional)
      # - ./server:/app/server
    environment:
      - NODE_ENV=production
      - SQLITE_PATH=/app/data/crm.db
      - UPLOAD_FOLDER=/app/uploads
      - PORT=3001
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "node", "-e", "http.get('http://localhost:3001/api/health', (res) => { process.exit(res.statusCode === 200 ? 0 : 1) })"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    networks:
      - crm-network

  # Optional: Add Nginx reverse proxy for production
  nginx:
    image: nginx:alpine
    container_name: crm-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
      - ./uploads:/var/www/uploads:ro
    depends_on:
      - crm-app
    restart: unless-stopped
    networks:
      - crm-network
    profiles:
      - production

  # Optional: Database backup service
  backup:
    image: alpine
    container_name: crm-backup
    volumes:
      - ./data:/data:ro
      - ./backups:/backups
    environment:
      - BACKUP_SCHEDULE=0 2 * * *  # Daily at 2 AM
    command: >
      sh -c "
        apk add --no-cache sqlite dcron &&
        echo '${BACKUP_SCHEDULE} cd /data && sqlite3 crm.db \".backup /backups/crm-backup-$$(date +%Y%m%d-%H%M).db\" && find /backups -name \"crm-backup-*.db\" -mtime +7 -delete' | crontab - &&
        crond -f -l 2
      "
    restart: unless-stopped
    profiles:
      - backup

networks:
  crm-network:
    driver: bridge

volumes:
  crm-data:
    driver: local
  crm-uploads:
    driver: local